//
//  NetworkService.swift
//  Test
//
//  Created by –ú–∞–∫–µ–π üòà on 12.09.2024.
//

//
//  NetworkService.swift
//  Test
//
//  Created by –ú–∞–∫–µ–π üòà on 12.09.2024.
//

import Foundation

class NetworkService {
    
    // URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    private let urlString = "https://cars.cprogroup.ru/api/episode/statistics/"
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π
    func fetchVisitors(completion: @escaping (Result<Int, Error>) -> Void) {
        guard let url = URL(string: urlString) else {
            completion(.failure(NSError(domain: "Invalid URL", code: -1, userInfo: nil)))
            return
        }
        
        let task = URLSession.shared.dataTask(with: url) { data, response, error in
            if let error = error {
                completion(.failure(error))
                return
            }
            
            guard let data = data else {
                completion(.failure(NSError(domain: "No data received", code: -1, userInfo: nil)))
                return
            }
            
            do {
                let visitorsResponse = try JSONDecoder().decode(VisitorsResponse.self, from: data)
                let visitorsCount = visitorsResponse.statistics.count
                completion(.success(visitorsCount))
            } catch {
                completion(.failure(error))
            }
        }
        
        task.resume()
    }
}
